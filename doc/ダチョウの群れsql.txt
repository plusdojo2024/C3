CREATE TABLE USERS
(id			INTEGER		AUTO_INCREMENT	NOT NULL,
 user_id		VARCHAR(100)	NOT NULL,
 user_name		VARCHAR(100)	NOT NULL,
 user_password		VARCHAR(32)	NOT NULL,
 is_organization	BOOLEAN		NOT NULL,
 address			VARCHAR(100),
 phonenumber		VARCHAR(100),
 email			VARCHAR(100),
 remarks		VARCHAR(500),
 PRIMARY KEY (id)
);

CREATE TABLE ANIMALS
(id		INTEGER		NOT NULL,
 kind		VARCHAR(32)	NOT NULL,
 PRIMARY KEY (id)
);

CREATE TABLE INDIVIDUALS
(id		INTEGER		AUTO_INCREMENT,
 animal_id	INTEGER		NOT NULL,
 animal_name	VARCHAR(100)	NOT NULL,
 type		VARCHAR(100)	NOT NULL,
 age		INTEGER			,
 gender		VARCHAR(32)	NOT NULL,
 user_id	INTEGER		,
 period		DATE		NOT NULL,
 remarks	VARCHAR(500)	NOT NULL,
 is_castration	BOOLEAN		NOT NULL,
 birthday	DATE			,
 img		VARCHAR(200),
 PRIMARY KEY (id)
);

CREATE TABLE dms
(id		INTEGER AUTO_INCREMENT	,
 send_id		VARCHAR(100)	NOT NULL,
 receive_id		VARCHAR(100)	NOT NULL,
 dm_day		DateTime	NOT NULL,
 dm_detail	VARCHAR(200)	NOT NULL,
 read		BOOLEAN		NOT NULL,
 PRIMARY KEY (id)
);

INSERT INTO USERS VALUES (null, 'ootani','大谷', 'rinrintaro22', false,null,null,null,null);
INSERT INTO USERS VALUES (null, 'orgA','保護団体A', 'orgA', true,'東京都','080-2222-2222','orgA@gmail.com','テスト用データ');
INSERT INTO USERS VALUES (null, 'orgB','保護団体B', 'orgB', true,'東京都','080-3333-3333','orgB@gmail.com','テスト用データ');
INSERT INTO USERS VALUES (null, 'orgC','保護団体C', 'orgC', true,'東京都','080-4444-4444','orgC@gmail.com','テスト用データ');
INSERT INTO USERS VALUES (null, 'orgD','保護団体D', 'orgD', true,'東京都','080-5555-5555','orgD@gmail.com','テスト用データ');
INSERT INTO USERS VALUES (null, 'orgE','保護団体E', 'orgE', true,'東京都','080-6666-6666','orgE@gmail.com','テスト用データ');
INSERT INTO USERS VALUES (null, 'tanaka','田中', 'tanatanaka', false,null,null,null,null);
INSERT INTO USERS VALUES (null, 'orgF','保護団体F', 'orgF', true,'東京都','080-8888-8888','orgF@gmail.com','テスト用データ');
INSERT INTO ANIMALS VALUES (1,'犬');
INSERT INTO ANIMALS VALUES (2,'猫');
INSERT INTO INDIVIDUALS VALUES (null, 1,'ポチ','ダックスフンド',3,'オス',2,'2024-06-14','テストデータです',true,'2021-10-25','poti.png');

//INDIVIDUALSテーブルのuser_id（USERSテーブルのidと紐づけ(user_nameを取得)）とanimal_id（ANIMALSテーブルのid(1 or 2)と紐づけ（kind）を取得）を正規化
SELECT INDIVIDUALS.id, INDIVIDUALS.animal_id,kind, animal_name, type, age, gender, INDIVIDUALS.user_id,user_name,USERS.is_organization, period, INDIVIDUALS.remarks, is_castration, birthday, img  
FROM INDIVIDUALS JOIN USERS ON INDIVIDUALS.user_id = USERS.id JOIN ANIMALS ON INDIVIDUALS.animal_id = ANIMALS.id;

INSERT INTO DMS VALUES(null, '1', '2', CURRENT_TIMESTAMP, 'おはようございます', true);
INSERT INTO DMS VALUES(null, '1', '2', CURRENT_TIMESTAMP, '元気？', true);
INSERT INTO DMS VALUES(null, '1', '3', CURRENT_TIMESTAMP, 'お疲れ様です', true);
INSERT INTO DMS VALUES(null, '2', '1', CURRENT_TIMESTAMP, '久しぶりー', true);
INSERT INTO DMS VALUES(null, '2', '1', CURRENT_TIMESTAMP, '今度飲み行こうよ', true);
INSERT INTO DMS VALUES(null, '4', '1', CURRENT_TIMESTAMP, '今日飯食いいかね？', true);
INSERT INTO DMS VALUES(null, '3', '1', CURRENT_TIMESTAMP, 'お疲れ様です。どうしました？', true);
INSERT INTO DMS VALUES(null, '5', '1', CURRENT_TIMESTAMP, '今日くるの？', true);
INSERT INTO DMS VALUES(null, '6', '1', CURRENT_TIMESTAMP, '今日俺休むわ', true);
INSERT INTO DMS VALUES(null, '7', '8', CURRENT_TIMESTAMP, 'ういー', true);

//トーク履歴順にソート
SELECT CASE WHEN userid = '大谷' THEN _id
	    WHEN _id = '大谷' THEN userid
	    END AS who_id
	FROM DMS WHERE userid='大谷' OR _id='大谷'
	ORDER BY dm_day DESC;
	

//トーク相手の名前をグループ化
SELECT CASE WHEN userid = '大谷' THEN _id
	    WHEN _id = '大谷' THEN userid
	    END AS who_id 
	FROM DMS WHERE userid='大谷' OR _id='大谷'
	GROUP BY who_id;

//トーク相手の名前をトーク履歴順に表示
SELECT who_id FROM(SELECT who_id,MAX(dm_day) as recent_dm_day FROM(SELECT dm_day, CASE WHEN userid = '大谷' THEN _id
	    WHEN _id = '大谷' THEN userid
	    END AS who_id
	FROM DMS WHERE userid='大谷' OR _id='大谷')GROUP BY who_Id)
       ORDER BY recent_dm_day DESC;


//トーク相手の(idとuser_nameとis=organization)をトーク履歴順に表示
SELECT who_id, user_name, is_organization
	FROM (SELECT who_id, 
		FROM(SELECT who_id,MAX(dm_day) as recent_dm_day 
		FROM(SELECT dm_day,
			CASE 
			WHEN send_id = '1' THEN receive_id
			WHEN receive_id = 1 THEN send_id
			END AS who_id
			FROM DMS WHERE send_id=1 OR receive_id=1)
		GROUP BY who_Id)
		ORDER BY recent_dm_day DESC)
	JOIN USERS ON who_id = USERS.id ;


SELECT who_id, user_name, is_organization
	FROM (SELECT who_id, 
		FROM(SELECT who_id,MAX(dm_day) as recent_dm_day 
		FROM(SELECT dm_day,
			CASE 
			WHEN send_id = '1' THEN receive_id
			WHEN receive_id = '1' THEN send_id
			END AS who_id
			FROM DMS WHERE send_id='1' OR receive_id='1')
		GROUP BY who_Id)
		ORDER BY recent_dm_day DESC)
	JOIN USERS ON who_id = USERS.id ;

SELECT WHO_ID, USER_NAME, IS_ORGANIZATION 
	FROM (SELECT WHO_ID, 
		FROM(SELECT WHO_ID,MAX(DM_DAY) AS RECENT_DM_DAY 
		FROM(SELECT DM_DAY, 
			CASE 
			WHEN SEND_ID = '1' THEN RECEIVE_ID 
			WHEN RECEIVE_ID = '1' THEN SEND_ID 
			END AS WHO_ID 
			FROM DMS WHERE SEND_ID=1 OR RECEIVE_ID=1) 
		GROUP BY WHO_ID )
		ORDER BY RECENT_DM_DAY DESC) 
	JOIN USERS ON WHO_ID = USERS.ID

 expected "(, ., [, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, ILIKE, REGEXP, IS, IN, BETWEEN, AND, OR, RIGHT, LEFT, FULL, INNER, JOIN, CROSS, NATURAL, ,, SELECT"; SQL statement:


//トーク相手とのトーク履歴表示
SELECT dm_detail FROM DMs
	WHERE (send_id=1 AND receive_id=2)
	OR (receive_id=1 AND send_id=2)	
		ORDER BY dm_day ASC;


